/**
 * CategoryCylinderController
 *
 * @description :: Server-side actions for handling incoming requests.
 * @help        :: See https://sailsjs.com/docs/concepts/actions
 */

module.exports = {

    create: async function (req, res) {
        if (!req.body) {
            return res.badRequest(Utils.jsonErr('Empty body'));
        }

        const {
            code,
            name,
            userId,
        } = req.body

        if (!code) {
          return res.badRequest(Utils.jsonErr('Code is required'));
        }

        if (!name) {
            return res.badRequest(Utils.jsonErr('Name is required'));
        }

        if (!userId) {
            return res.badRequest(Utils.jsonErr('UserId is required'));
        }

        // if (typeof weight !== 'number') {
        //     return res.badRequest(Utils.jsonErr('Weight phải là kiểu number'));
        // }

        try {
            const userInfor = await User.findOne({id: userId})
            if (!userInfor) {
                return res.json({
                    status: false,
                    resCode: 'ERROR-00001',
                    data: {},
                    message: 'Không tìm thấy thông tin người dùng trong hệ thống'
                })
            }

            const isExistCategory = await CategoryCylinder.findOne({code : code, isDeleted: false})
            if (isExistCategory) {
                return res.json({
                    status: false,
                    resCode: 'ERROR-00002',
                    data: {},
                    message: 'Trùng tên loại bình'
                })
            }

            const categoryCylinder = await CategoryCylinder.create({
                code: code,
                name: name,                
                createdBy: userInfor.id
            }).fetch();

            if (!categoryCylinder) {
                return res.json({
                    status: false,
                    resCode: 'ERROR-000033',
                    data: {},
                    message: 'Tạo loại bình mới thất bại'
                })
            }
            else {
                return res.json({
                    status: true,
                    resCode: 'SUCCESS-00001',
                    data: categoryCylinder,
                    message: 'Tạo danh mục bình mới thành công',                    
                })
            }

        }
        catch(error) {
            return res.json({
                status: false,
                resCode: 'CATCH-00001',
                data: {
                    error: error.message
                },
                message: 'Gặp lỗi khi tạo danh mục loại bình'
            })
        }        
    },

    list: async function (req, res) {
        try {            
            const categoryCylinder = await CategoryCylinder.find({isDeleted: false})
            return res.ok({
                status: true,
                resCode: 'SUCCESS-00002',
                data: categoryCylinder,
                message: 'Lấy danh mục loại bình thành công',                    
            });
        } catch (error) {
            return res.badRequest({
                status: false,
                resCode: 'CATCH-00002',
                data: {
                    error: error.message
                },
                message: 'Gặp lỗi khi lấy danh mục loại bình'
            });
        }
    },

};

